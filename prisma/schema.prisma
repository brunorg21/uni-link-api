// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  TEACHER
  STUDENT
}

enum ClassroomType {
  LAB
  CLASSROOM
}

model User {
  id            String      @id() @default(uuid())
  name          String
  email         String      @unique()
  password_hash String
  role          Role        @default(STUDENT)
  subject       Subject[]
  createdAt     DateTime    @default(now())
  Alocation     Alocation[]

  @@map("users")
}

model Subject {
  id      String    @id @default(uuid())
  name    String
  user    User      @relation(fields: [userId], references: [id])
  userId  String
  Classes Classes[]

  @@map("subjects")
}

model Classes {
  id              String        @id @default(uuid())
  subject         Subject       @relation(fields: [subjectId], references: [id])
  subjectId       String
  classSchedule   ClassSchedule @relation(fields: [classScheduleId], references: [id])
  classScheduleId String
  classDate       DateTime
  reserved        Boolean       @default(false)
  Alocation       Alocation[]

  @@map("classes")
}

model ClassSchedule {
  id        String    @id @default(uuid())
  startHour String
  endHour   String
  Classes   Classes[]

  @@map("classSchedules")
}

model Classroom {
  id        String        @id @default(uuid())
  name      String
  type      ClassroomType @default(CLASSROOM)
  capacity  Int
  computers Int?
  Alocation Alocation[]

  @@map("classrooms")
}

model Alocation {
  id          String    @id @default(uuid())
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  classroom   Classroom @relation(fields: [classroomId], references: [id])
  classroomId String
  class       Classes   @relation(fields: [classesId], references: [id])
  classesId   String
  createdAt   DateTime  @default(now())

  @@map("alocations")
}
